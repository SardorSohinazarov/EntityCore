//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Orders;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Orders;
using TestApiNet8.Domain.Entities;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class OrdersController : ControllerBase
    {
        private readonly IOrdersService _ordersService;
        public OrdersController(IOrdersService ordersService)
        {
            _ordersService = ordersService;
        }

        [HttpPost]
        public async Task<Result<OrderViewModel>> AddAsync(OrderCreationDto orderCreationDto)
        {
            return Result<OrderViewModel>.Success(await _ordersService.AddAsync(orderCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<OrderViewModel>>> GetAllAsync()
        {
            return Result<List<OrderViewModel>>.Success(await _ordersService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<OrderViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<OrderViewModel>>.Success(await _ordersService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<OrderViewModel>> GetByIdAsync(int id)
        {
            return Result<OrderViewModel>.Success(await _ordersService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<OrderViewModel>> UpdateAsync(int id, OrderModificationDto orderModificationDto)
        {
            return Result<OrderViewModel>.Success(await _ordersService.UpdateAsync(id, orderModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<OrderViewModel>> DeleteAsync(int id)
        {
            return Result<OrderViewModel>.Success(await _ordersService.DeleteAsync(id));
        }
    }
}