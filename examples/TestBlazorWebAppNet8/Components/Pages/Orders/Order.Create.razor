<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/orders/create"
@rendermode InteractiveServer
@using System
@using TestApiNet8.Domain.Entities
@using DataTransferObjects.Orders
@using Services.Orders
@inject IOrdersService OrderService
@inject NavigationManager NavigationManager

<h3>Create New Order</h3>

<EditForm FormName="OrderCreationDto" Model="@order" OnValidSubmit="() => HandleValidSubmit()">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="userid">UserId:</label>
        <InputNumber id="userid" class="form-control" @bind-Value="order.UserId" />
        <ValidationMessage For="@(() => order.UserId)" />
    </div>
    <div class="form-group mb-3">
        <label for="totalamount">TotalAmount:</label>
        <InputNumber id="totalamount" class="form-control" @bind-Value="order.TotalAmount" />
        <ValidationMessage For="@(() => order.TotalAmount)" />
    </div>
    <div class="form-group mb-3">
        <label for="status">Status:</label>
        <InputSelect id="status" class="form-control" @bind-Value="order.Status">
            @foreach (var value in Enum.GetValues(typeof(OrderStatus)))
            {
                <option value="@value">@value</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => order.Status)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public OrderCreationDto order { get; set; } = new OrderCreationDto();

    private async Task HandleValidSubmit()
    {
        await OrderService.AddAsync(order);
        NavigationManager.NavigateTo("/orders");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/orders");
    }
}
